# Scenario 1: Microservices Logging Solution
# Pattern: Sidecar
# Difficulty: Intermediate

apiVersion: v1
kind: Pod
metadata:
  name: microservice-with-logging
  labels:
    app: microservice
    pattern: sidecar
spec:
  volumes:
  - name: log-volume
    emptyDir: {}
  - name: fluent-bit-config
    configMap:
      name: fluent-bit-config
  
  containers:
  # Main microservice
  - name: microservice
    image: my-microservice:latest
    volumeMounts:
    - name: log-volume
      mountPath: /var/log/app
    env:
    - name: LOG_LEVEL
      value: "info"
    - name: LOG_FORMAT
      value: "json"
    resources:
      requests:
        memory: "256Mi"
        cpu: "200m"
      limits:
        memory: "512Mi"
        cpu: "500m"
    livenessProbe:
      httpGet:
        path: /health
        port: 8080
      initialDelaySeconds: 30
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /ready
        port: 8080
      initialDelaySeconds: 10
      periodSeconds: 5
  
  # Fluent Bit log collector sidecar
  - name: fluent-bit
    image: fluent/fluent-bit:1.9
    volumeMounts:
    - name: log-volume
      mountPath: /var/log/app
      readOnly: true
    - name: fluent-bit-config
      mountPath: /fluent-bit/etc/
    env:
    - name: OUTPUT_HOST
      value: "elasticsearch.logging.svc.cluster.local"
    - name: OUTPUT_PORT
      value: "9200"
    - name: OUTPUT_INDEX
      value: "microservice-logs"
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     info
        Daemon        off
        Parsers_File  parsers.conf
    
    [INPUT]
        Name              tail
        Path              /var/log/app/*.log
        Parser            json
        Tag               microservice.*
        Refresh_Interval  5
    
    [OUTPUT]
        Name  es
        Match *
        Host  ${OUTPUT_HOST}
        Port  ${OUTPUT_PORT}
        Index ${OUTPUT_INDEX}
        Type  _doc
  
  parsers.conf: |
    [PARSER]
        Name        json
        Format      json
        Time_Key    timestamp
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z