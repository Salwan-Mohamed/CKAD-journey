# Scenario 2: Database Connection Pooling
# Pattern: Ambassador
# Difficulty: Advanced

apiVersion: v1
kind: Pod
metadata:
  name: app-with-db-proxy
  labels:
    app: web-app
    pattern: ambassador
spec:
  containers:
  # Application
  - name: web-app
    image: my-web-app:latest
    env:
    - name: DATABASE_URL
      value: "postgresql://app:password@localhost:5432/mydb"
    - name: REDIS_URL
      value: "redis://localhost:6379"
    ports:
    - containerPort: 8080
    resources:
      requests:
        memory: "512Mi"
        cpu: "300m"
      limits:
        memory: "1Gi"
        cpu: "800m"
    livenessProbe:
      httpGet:
        path: /health
        port: 8080
      initialDelaySeconds: 30
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /ready
        port: 8080
      initialDelaySeconds: 10
      periodSeconds: 5
  
  # PgBouncer ambassador
  - name: pgbouncer
    image: pgbouncer/pgbouncer:latest
    env:
    - name: DATABASES_HOST
      value: "postgres-primary.default.svc.cluster.local"
    - name: DATABASES_PORT
      value: "5432"
    - name: DATABASES_USER
      value: "app"
    - name: DATABASES_PASSWORD
      valueFrom:
        secretKeyRef:
          name: db-credentials
          key: password
    - name: DATABASES_DBNAME
      value: "mydb"
    - name: POOL_MODE
      value: "session"
    - name: MAX_CLIENT_CONN
      value: "100"
    - name: DEFAULT_POOL_SIZE
      value: "20"
    - name: MIN_POOL_SIZE
      value: "5"
    - name: RESERVE_POOL_SIZE
      value: "3"
    ports:
    - containerPort: 5432
    volumeMounts:
    - name: pgbouncer-config
      mountPath: /etc/pgbouncer
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"
    livenessProbe:
      tcpSocket:
        port: 5432
      initialDelaySeconds: 15
      periodSeconds: 20
    readinessProbe:
      tcpSocket:
        port: 5432
      initialDelaySeconds: 5
      periodSeconds: 10
  
  volumes:
  - name: pgbouncer-config
    configMap:
      name: pgbouncer-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgbouncer-config
data:
  pgbouncer.ini: |
    [databases]
    mydb = host=${DATABASES_HOST} port=${DATABASES_PORT} dbname=${DATABASES_DBNAME}
    
    [pgbouncer]
    listen_addr = 0.0.0.0
    listen_port = 5432
    auth_type = md5
    auth_file = /etc/pgbouncer/userlist.txt
    
    pool_mode = ${POOL_MODE}
    max_client_conn = ${MAX_CLIENT_CONN}
    default_pool_size = ${DEFAULT_POOL_SIZE}
    min_pool_size = ${MIN_POOL_SIZE}
    reserve_pool_size = ${RESERVE_POOL_SIZE}
    
    server_reset_query = DISCARD ALL
    server_check_query = SELECT 1
    server_check_delay = 10
    
    log_connections = 1
    log_disconnections = 1
    log_pooler_errors = 1
  
  userlist.txt: |
    "app" "password"

---
apiVersion: v1
kind: Secret
metadata:
  name: db-credentials
type: Opaque
data:
  password: cGFzc3dvcmQ=  # base64 encoded 'password'