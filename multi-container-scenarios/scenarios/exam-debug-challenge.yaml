# CKAD Exam Scenario: Multi-Container Debug Challenge
# Pattern: Sidecar (Troubleshooting)
# Difficulty: Intermediate

# BROKEN Configuration - Issues to identify and fix:
# 1. Different mount paths between containers
# 2. Missing proper security context
# 3. Potential permission issues
apiVersion: v1
kind: Pod
metadata:
  name: file-sharing-pod-broken
  labels:
    exam: debug-challenge
    status: broken
spec:
  containers:
  - name: writer
    image: busybox
    command: ['sh', '-c', 'while true; do echo "data" > /app/file.txt; sleep 30; done']
    volumeMounts:
    - name: shared-volume
      mountPath: /app
  
  - name: reader
    image: busybox
    command: ['sh', '-c', 'while true; do cat /data/file.txt; sleep 30; done']  # Wrong path!
    volumeMounts:
    - name: shared-volume
      mountPath: /data  # Different mount path!
  
  volumes:
  - name: shared-volume
    emptyDir: {}

---
# FIXED Configuration - Corrected version
apiVersion: v1
kind: Pod
metadata:
  name: file-sharing-pod-fixed
  labels:
    exam: debug-challenge
    status: fixed
spec:
  securityContext:
    fsGroup: 1000  # Ensure proper group ownership
  
  containers:
  - name: writer
    image: busybox
    command: ['sh', '-c', 'while true; do echo "$(date): data from writer" > /shared/file.txt; sleep 30; done']
    volumeMounts:
    - name: shared-volume
      mountPath: /shared  # Consistent mount path
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      allowPrivilegeEscalation: false
    resources:
      requests:
        memory: "32Mi"
        cpu: "25m"
      limits:
        memory: "64Mi"
        cpu: "50m"
  
  - name: reader
    image: busybox
    command: ['sh', '-c', 'while true; do if [ -f /shared/file.txt ]; then echo "Reading file:"; cat /shared/file.txt; else echo "File not found at $(date)"; fi; sleep 30; done']
    volumeMounts:
    - name: shared-volume
      mountPath: /shared  # Same mount path as writer
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      allowPrivilegeEscalation: false
    resources:
      requests:
        memory: "32Mi"
        cpu: "25m"
      limits:
        memory: "64Mi"
        cpu: "50m"
  
  volumes:
  - name: shared-volume
    emptyDir: {}

---
# Advanced scenario with init container for permission setup
apiVersion: v1
kind: Pod
metadata:
  name: file-sharing-pod-advanced
  labels:
    exam: debug-challenge
    status: advanced
spec:
  securityContext:
    fsGroup: 2000
  
  initContainers:
  - name: permission-fix
    image: busybox
    command: ['sh', '-c', 'chmod 755 /shared && chown 1000:2000 /shared && echo "Permissions set up completed"']
    volumeMounts:
    - name: shared-volume
      mountPath: /shared
    securityContext:
      runAsUser: 0  # Run as root for permission changes
  
  containers:
  - name: writer
    image: busybox
    command: ['sh', '-c', 'while true; do echo "$(date): Advanced data from writer (PID: $$)" > /shared/file.txt; sleep 30; done']
    volumeMounts:
    - name: shared-volume
      mountPath: /shared
    securityContext:
      runAsUser: 1000
      runAsGroup: 2000
      allowPrivilegeEscalation: false
    resources:
      requests:
        memory: "32Mi"
        cpu: "25m"
      limits:
        memory: "64Mi"
        cpu: "50m"
  
  - name: reader
    image: busybox
    command: ['sh', '-c', 'while true; do if [ -f /shared/file.txt ]; then echo "=== File Content ==="; cat /shared/file.txt; echo "=== File Permissions ==="; ls -la /shared/file.txt; else echo "File not found at $(date)"; fi; sleep 30; done']
    volumeMounts:
    - name: shared-volume
      mountPath: /shared
    securityContext:
      runAsUser: 1000
      runAsGroup: 2000
      allowPrivilegeEscalation: false
    resources:
      requests:
        memory: "32Mi"
        cpu: "25m"
      limits:
        memory: "64Mi"
        cpu: "50m"
  
  - name: monitor
    image: busybox
    command: ['sh', '-c', 'while true; do echo "=== Directory Listing ==="; ls -la /shared/; echo "=== Disk Usage ==="; df -h /shared; sleep 60; done']
    volumeMounts:
    - name: shared-volume
      mountPath: /shared
      readOnly: true
    securityContext:
      runAsUser: 1000
      runAsGroup: 2000
      allowPrivilegeEscalation: false
    resources:
      requests:
        memory: "16Mi"
        cpu: "10m"
      limits:
        memory: "32Mi"
        cpu: "25m"
  
  volumes:
  - name: shared-volume
    emptyDir:
      sizeLimit: 100Mi